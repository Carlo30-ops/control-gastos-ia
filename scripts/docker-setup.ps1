# Script de configuraci√≥n Docker para ExpenseIA

Write-Host "üê≥ Configurando Docker para ExpenseIA..." -ForegroundColor Green

# Verificar si Docker est√° instalado
Write-Host "üì¶ Verificando Docker..." -ForegroundColor Yellow
try {
    $dockerVersion = docker --version
    Write-Host "‚úÖ Docker encontrado: $dockerVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Docker no est√° instalado." -ForegroundColor Red
    Write-Host "üì• Instalando Docker Desktop..." -ForegroundColor Yellow
    
    # Intentar instalar con winget
    try {
        winget install Docker.DockerDesktop
        Write-Host "‚úÖ Docker Desktop instalado. Reinicia tu computadora y ejecuta este script nuevamente." -ForegroundColor Green
        exit 0
    } catch {
        Write-Host "‚ùå Error instalando Docker. Inst√°lalo manualmente desde: https://www.docker.com/products/docker-desktop" -ForegroundColor Red
        exit 1
    }
}

# Verificar si Docker est√° ejecut√°ndose
Write-Host "üîç Verificando que Docker est√© ejecut√°ndose..." -ForegroundColor Yellow
try {
    docker ps
    Write-Host "‚úÖ Docker est√° ejecut√°ndose" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Docker no est√° ejecut√°ndose. Inicia Docker Desktop y ejecuta este script nuevamente." -ForegroundColor Red
    exit 1
}

# Crear archivo .env si no existe
if (-not (Test-Path ".env")) {
    Write-Host "üìù Creando archivo .env..." -ForegroundColor Yellow
    Copy-Item "env.example" ".env"
    Write-Host "‚úÖ Archivo .env creado. Configura tus variables de entorno." -ForegroundColor Green
}

# Construir im√°genes
Write-Host "üî® Construyendo im√°genes Docker..." -ForegroundColor Yellow
docker-compose build

if ($LASTEXITCODE -eq 0) {
    Write-Host "‚úÖ Im√°genes construidas correctamente" -ForegroundColor Green
} else {
    Write-Host "‚ùå Error construyendo im√°genes" -ForegroundColor Red
    exit 1
}

# Iniciar servicios
Write-Host "üöÄ Iniciando servicios..." -ForegroundColor Yellow
docker-compose up -d

if ($LASTEXITCODE -eq 0) {
    Write-Host "‚úÖ Servicios iniciados correctamente!" -ForegroundColor Green
    
    Write-Host "`nüåê URLs de acceso:" -ForegroundColor Cyan
    Write-Host "  Backend (Spring Boot): http://localhost:8080" -ForegroundColor White
    Write-Host "  IA Service (Python): http://localhost:8000" -ForegroundColor White
    Write-Host "  PostgreSQL: localhost:5432" -ForegroundColor White
    Write-Host "  Redis: localhost:6379" -ForegroundColor White
    
    Write-Host "`nüìã Comandos √∫tiles:" -ForegroundColor Yellow
    Write-Host "  docker-compose logs -f          # Ver logs en tiempo real" -ForegroundColor White
    Write-Host "  docker-compose ps               # Ver estado de contenedores" -ForegroundColor White
    Write-Host "  docker-compose down             # Detener todos los servicios" -ForegroundColor White
    Write-Host "  docker-compose restart          # Reiniciar servicios" -ForegroundColor White
    Write-Host "  docker-compose exec backend bash # Acceder al contenedor backend" -ForegroundColor White
    Write-Host "  docker-compose exec ai_service bash # Acceder al contenedor de IA" -ForegroundColor White
    
} else {
    Write-Host "‚ùå Error iniciando servicios" -ForegroundColor Red
    Write-Host "üîç Revisa los logs con: docker-compose logs" -ForegroundColor Yellow
    exit 1
}



